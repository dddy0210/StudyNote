

-JAVA 
썬에서는 오크의 명칭을 Java로 바꾼뒤 서로 다른 컴퓨터(OS - 운영체제)사이에서 호환성과 이식률을 높인 언어로 발전시켰다.

-JVM
자바 가상 머신(Java Virtual Machine)은 자바 프로그램 실행환경을 만들어주는 소프트웨어

-JRE(Java Runtime Environment)
JVM과 자바 프로그램을 실행시킬 때 필요한 라이브러리 API를 함께 묶어서 배포되는 패키지이다.

-LTS(LongTimeService)
장기간 안정적인 지원 받을 수 있는 버전 / 실무에서 선호
보안패치와 성능 개선을 지속적으로 받을 수 있다는 장점

-객체 지향언어
하나의 기능을 객체로 만들고 이러한 객체들을 결합해 하나의 프로그램을 완성하는 기법
자바는 대표적으로 상속,캡슐화,다형성이 잘 나타난다. 

1)상속 : 부모(슈퍼)클래스의 필드와 메서드를 자식(서브)클래스가 상속받아 사용하는 기능
-코드 재사용성 높이고 유지보수 용이하게 함 (extends)
2)캡슐화 : 데이터를 외부에서 직접 접근하지 못하도록 하고, 접근 제한 메서드(게터/세터)를
통해 제어하는 개념
-데이터 무결성을 보호하고,클래스 내부 구현을 숨김 
-접근제어자(private,protected,public)통해 접근 수준 설정 
3)다형성 : 하나의 객체나 메서드가 여러형태를 가질 수 있는 성질 의미 (오버로딩/오버라이딩)
-동일한 인터페이스나 부모 클래스를 참조하여 다양한 형태 객체 다룸 

단순성 : C/C++에서 제공하는 포인터등 혼란 일으키는 불필요한 기능 제거

이식성: 한번만 작성해놓으면 운영체제의 종류와 상관없이 실행 

메모리자동정리: 자동으로 가비지컬렉터가 사용하지 않는 메모리를 주기적으로 수거하고 관리
**가비지 컬렉터(Garbage Collector, GC)는 자바(Java)와 같은 메모리 관리가 자동화된 언어에서 
사용하지 않는 객체(메모리)를 자동으로 회수하여 메모리 누수를 방지하고 효율적인 메모리 관리를 돕는 기능입니다. 
자바는 프로그래머가 직접 메모리를 해제하지 않도록 설계되어 있으며, GC가 이 작업을 수행합니다.

풍부한 오픈소스 라이브러리
무료 제공 라이브러리가 많이 개발되어 있어 개발 기간 단축 안정성 높은 프로그램 개발 가능

컴파일(Compile)
프로그래머가 작성한 .java 코드(자바코드)를 .class 코드(바이트 코드)로 바꾸는 일련의 과정

클래스 
자바에서 프로그램 개발하는 단위 / 하나의 클래스가 있어야하며 소스 파일의 이름이 클래스 이름과 동일해야함

메서드
수행할 작업을 나열한 코드의 모음
자바 프로그램 시작 위치인 main()메서드를 포함하는 클래스가 반드시 있어야함

실행문
작업을 지시하는것으로 변수나 상수의 선언,값,저장,메서드 호출 등 다양한 명령어와 연산자로 구성됨

데이터
실제적인 값 의미 / 숫자,문자와 같은 단순한 데이터부터 사진,영상 등 복합적인 데이터

System.out.print() : 괄호안의 내용을 출력한다.
System.out.println() : 괄호안의 내용을 출력하고 줄을 바꿔준다(개행)

System.out.printf() 출력문은 값의 자료형에 따라 서식문자를 이용해 문자열속에서 데이터를 출력할 수 있다.

서식문자	출력형태
%d	정수(10진수)
%o	정수(8진수)
%x	정수(16진수)
%f	실수
%s	문자열
%c	문자형
%b	논리형

기본자료형

자료형	   키워드	   메모리 크기	  표현 범위
논리형	   boolean	    1bit	     true, false(기본값 false)
문자형	   	char        2byte      기본값 \u0000 or 0
정수형    	byte        1byte       -128 ~ 127
          short       2byte       -32,768 ~ 32,767
          int         4byte       -21,4748,3648 ~ 21,4748,3647
          long        8byte       -9,223,372,036,854,775,808 ~ (900경)
실수형    float        4byte       기본값 0.0
          double      8byte

오버플로우 / 언더플로우
-오버플로우는 해당 자료형이 표현할 수 있는 최대 범위보다 큰 수를 저장할 때 발생하는 현상으로 잘못된 결과를 얻을 수 있다.
-언더플로우는 해당 자료형이 표현할 수 있는 최소 범위보다 작은 수를 저장할 때 발생하는 현상이다.

참조자료형 / 문자열	String
-메모리상에 데이터가 저장된 주소를 저장하기 위한 공간으로, 대표적으로 문자열을 저장하는 String이라는 자료형을 예로 들 수 있다.
-참조 자료형은 개발자가 직접만들어 추가할 수 있는 자료형으로 그 수가 정해져 있지 않다.
-프로그램을 실행할 때 필요한 메모리는 Stack과 Heap으로 나뉘어져있다.
-기본 자료형은 Stack이라는 공간에 자리를 할당받고 데이터를 저장한다.
-참조 자료형은 Heap이라는 공간에 데이터를 저장하고, 그 주소를 Stack에 저장한다.
-주소를 참조하여 저장한다고 하여 참조 자료형이라고 한다.


|종류|기능|
|---|---|
|에이비씨|영어|















