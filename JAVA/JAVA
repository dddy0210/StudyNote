

-JAVA 
썬에서는 오크의 명칭을 Java로 바꾼뒤 서로 다른 컴퓨터(OS - 운영체제)사이에서 호환성과 이식률을 높인 언어로 발전시켰다.

-JVM
자바 가상 머신(Java Virtual Machine)은 자바 프로그램 실행환경을 만들어주는 소프트웨어

-JRE(Java Runtime Environment)
JVM과 자바 프로그램을 실행시킬 때 필요한 라이브러리 API를 함께 묶어서 배포되는 패키지이다.

-LTS(LongTimeService)
장기간 안정적인 지원 받을 수 있는 버전 / 실무에서 선호
보안패치와 성능 개선을 지속적으로 받을 수 있다는 장점

-객체 지향언어
하나의 기능을 객체로 만들고 이러한 객체들을 결합해 하나의 프로그램을 완성하는 기법
자바는 대표적으로 상속,캡슐화,다형성이 잘 나타난다. 

1)상속 : 부모(슈퍼)클래스의 필드와 메서드를 자식(서브)클래스가 상속받아 사용하는 기능
-코드 재사용성 높이고 유지보수 용이하게 함 (extends)
2)캡슐화 : 데이터를 외부에서 직접 접근하지 못하도록 하고, 접근 제한 메서드(게터/세터)를
통해 제어하는 개념
-데이터 무결성을 보호하고,클래스 내부 구현을 숨김 
-접근제어자(private,protected,public)통해 접근 수준 설정 
3)다형성 : 하나의 객체나 메서드가 여러형태를 가질 수 있는 성질 의미 (오버로딩/오버라이딩)
-동일한 인터페이스나 부모 클래스를 참조하여 다양한 형태 객체 다룸 

단순성 : C/C++에서 제공하는 포인터등 혼란 일으키는 불필요한 기능 제거

이식성: 한번만 작성해놓으면 운영체제의 종류와 상관없이 실행 

메모리자동정리: 자동으로 가비지컬렉터가 사용하지 않는 메모리를 주기적으로 수거하고 관리
**가비지 컬렉터(Garbage Collector, GC)는 자바(Java)와 같은 메모리 관리가 자동화된 언어에서 
사용하지 않는 객체(메모리)를 자동으로 회수하여 메모리 누수를 방지하고 효율적인 메모리 관리를 돕는 기능입니다. 
자바는 프로그래머가 직접 메모리를 해제하지 않도록 설계되어 있으며, GC가 이 작업을 수행합니다.

풍부한 오픈소스 라이브러리
무료 제공 라이브러리가 많이 개발되어 있어 개발 기간 단축 안정성 높은 프로그램 개발 가능

컴파일(Compile)
프로그래머가 작성한 .java 코드(자바코드)를 .class 코드(바이트 코드)로 바꾸는 일련의 과정
